import "pkg:/source/Misc.bs"
import "pkg:/source/enums/KeyCode.bs"
import "pkg:/source/enums/PosterLoadStatus.bs"

sub init()
    m.title = m.top.findNode("title")
    m.subtitle = m.top.findNode("subtitle")
    m.posterImage = m.top.findNode("posterImage")
    m.posterImage.observeFieldScoped("loadStatus", "onLoadStatusChange")

    m.tags = m.top.findNode("tags")
    m.tags.font.size = 20

    m.watchButton = m.top.findNode("watchButton")
    m.favoriteButton = m.top.findNode("favoriteButton")

    m.watchButton.focus = true
end sub

sub onShow()
end sub

sub onChannelDataChanged()
    if not isValid(m.top.channelData) then return

    if isValid(m.title)
        if isChainValid(m.top.channelData, "title")
            m.title.text = m.top.channelData.title
        end if
    end if

    if isValid(m.subtitle)
        if isChainValid(m.top.channelData, "secondarytitle")
            m.subtitle.text = m.top.channelData.secondarytitle
        end if
    end if

    if isValid(m.posterImage)
        if not isChainValid(m.top.channelData, "live")
            m.posterImage.uri = m.top.channelData.logoImageURI
        else
            if isChainValid(m.top.channelData, "thumbnailImageURI") and isChainValid(m.top.channelData, "logoImageURI")
                m.posterImage.uri = m.top.channelData.live ? m.top.channelData.thumbnailImageURI : m.top.channelData.logoImageURI
            end if
        end if
    end if

    if isValid(m.tags)
        if isChainValid(m.top.channelData, "tags")
            tagList = []
            for each tag in m.top.channelData.tags
                tagList.push(tag.slug)
            end for

            if tagList.count() > 0
                m.tags.text = `#${tagList.join("  #")}`
            end if
        end if
    end if

    ' If stream is offline, remove watch button
    if isValid(m.watchButton)
        if isChainValid(m.top.channelData, "live")
            if not m.top.channelData.live
                buttonParent = m.watchButton.getParent()
                if isValid(buttonParent)
                    buttonParent.removeChild(m.watchButton)
                end if

                if isValid(m.favoriteButton)
                    m.favoriteButton.focus = true
                    m.favoriteButton.setFocus(true)
                else
                    buttonParent.setFocus(true)
                end if
            end if
        end if
    end if

    if isValid(m.favoriteButton)
        if isChainValid(m.top.channelData, "isFavorite")
            processFavoriteButton()
        end if
    end if
end sub

sub onLoadStatusChange()
    if isStringEqual(m.posterImage.loadStatus, PosterLoadStatus.LOADING) then return

    if isStringEqual(m.posterImage.loadStatus, PosterLoadStatus.READY) then m.posterImage.unobserveFieldScoped("loadStatus")

    if isStringEqual(m.posterImage.loadStatus, PosterLoadStatus.FAILED)
        if isStringEqual(m.posterImage.uri, m.top.channelData.thumbnailImageURI)
            m.posterImage.uri = m.top.channelData.logoImageURI
            return
        end if
    end if

    m.posterImage.unobserveFieldScoped("loadStatus")
end sub

sub toggleFavorite()
    m.top.channelData.isFavorite = not m.top.channelData.isFavorite
end sub

sub processFavoriteButton()
    m.favoriteButton.text = m.top.channelData.isFavorite ? "Remove From Favorites" : "Add To Favorites"
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    if isStringEqual(key, KeyCode.OK)
        if m.watchButton.isInFocusChain()
            m.top.selectedButton = m.watchButton
            m.top.selectedButton = invalid
            return true
        end if

        if m.favoriteButton.isInFocusChain()
            toggleFavorite()
            processFavoriteButton()
            m.top.selectedButton = m.favoriteButton
            m.top.selectedButton = invalid
            return true
        end if
    end if

    if isStringEqual(key, KeyCode.DOWN)
        if m.watchButton.isInFocusChain()
            m.watchButton.focus = false
            m.favoriteButton.focus = true
            m.favoriteButton.setFocus(true)
            return true
        end if
    end if

    if isStringEqual(key, KeyCode.UP)
        if m.favoriteButton.isInFocusChain()
            m.watchButton.focus = true
            m.favoriteButton.focus = false
            m.watchButton.setFocus(true)
            return true
        end if
    end if

    return false
end function
